<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>cloudwatch events on toddaas blog</title>
    <link>https://blog.toddaas.com/tags/cloudwatch-events/</link>
    <description>Recent content in cloudwatch events on toddaas blog</description>
    <image>
      <url>https://blog.toddaas.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.toddaas.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 Apr 2021 05:10:21 +1000</lastBuildDate><atom:link href="https://blog.toddaas.com/tags/cloudwatch-events/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EC2 Autoscaling Warm Pools are very useful for looooong bootstrap times</title>
      <link>https://blog.toddaas.com/posts/ec2_warm_pools_are_useful/</link>
      <pubDate>Wed, 07 Apr 2021 05:10:21 +1000</pubDate>
      
      <guid>https://blog.toddaas.com/posts/ec2_warm_pools_are_useful/</guid>
      <description>What are EC2 Autoscaling Warm Pools? https://aws.amazon.com/blogs/compute/scaling-your-applications-faster-with-ec2-auto-scaling-warm-pools/
Why would you use Autoscaling Warm Pools? Warm pools are super useful when you have an application that has a significant amount of bootstrapping time usually attibuted to bespoke application configurations applied on instance launch into an Autoscaling Group.
Autoscaling Group Lifecycle Hooks when using Warm Pools So I learnt there is abit of a gotcha or side affect by design of Warm Pools, when it comes to using them alongside existing Lifecycle hooks to do bootstrapping of an application on EC2 instance launch.</description>
    </item>
    
  </channel>
</rss>
