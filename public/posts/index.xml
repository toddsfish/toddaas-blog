<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on toddaas blog</title>
    <link>https://blog.toddaas.com/posts/</link>
    <description>Recent content in Posts on toddaas blog</description>
    <image>
      <url>https://blog.toddaas.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.toddaas.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Aug 2023 05:10:21 +1000</lastBuildDate><atom:link href="https://blog.toddaas.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EC2 Autoscaling Warm Pools are very useful for looooooooong bootstrap times - Part 1</title>
      <link>https://blog.toddaas.com/posts/ec2_warm_pools_are_useful/</link>
      <pubDate>Tue, 08 Aug 2023 05:10:21 +1000</pubDate>
      
      <guid>https://blog.toddaas.com/posts/ec2_warm_pools_are_useful/</guid>
      <description>So whats the scenario? I came up against some a customer requirement of minimising the impact of long application bootstrap times in an autoscaling group partnered along side the requirement of keeping their standard barebones EC2 AMI interchangable. Essentially the customer did not want to have to deal with the bloat or overheads of maintaining a specific prebaked application AMI alongside an image building solution like EC2 Image Builder or a third party solution like Hashicorp Packer.</description>
    </item>
    
    <item>
      <title>Leaning towards dev(ops)</title>
      <link>https://blog.toddaas.com/posts/leaning_towards_dev_ops/</link>
      <pubDate>Wed, 07 Apr 2021 05:10:21 +1000</pubDate>
      
      <guid>https://blog.toddaas.com/posts/leaning_towards_dev_ops/</guid>
      <description>Starting this year I made it key goal of mine to actively build upon whatever dev knowledge I still remember from my bachelors about 10 years ago. Of course the dev mindset is still kinda there. I started my professional endeavors in the jack of all trades infrastructure engineering space following my IT degree. With a small focus on the networking side of things. During my work I&amp;rsquo;ve always adopted the DRY mantra.</description>
    </item>
    
  </channel>
</rss>
